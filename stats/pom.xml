<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.consol.labs.microprofilearticle</groupId>
        <artifactId>root</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>stats</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>de.consol.labs.microprofilearticle</groupId>
            <artifactId>common</artifactId>
        </dependency>
        <!-- open liberty features -->
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpConfig-1.3</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpJwt-1.1</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>jaxrs-2.1</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>cdi-2.0</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>jpa-2.2</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>beanValidation-2.0</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpOpenAPI-1.0</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpOpenTracing-1.1</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpMetrics-1.1</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpHealth-1.0</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpRestClient-1.1</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>jsonb-1.0</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.features</groupId>
            <artifactId>mpFaultTolerance-1.1</artifactId>
            <type>esa</type>
            <scope>provided</scope>
        </dependency>
        <!-- dependencies for generated clients -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-user-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api/user.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <configOptions>
                                <sourceFolder>src/gen/java</sourceFolder>
                                <java8>true</java8>
                                <dateLibrary>java8</dateLibrary>
                                <library>jersey2</library>
                                <invokerPackage>de.consol.labs.microprofilearticle.user.generatedclient</invokerPackage>
                                <modelPackage>de.consol.labs.microprofilearticle.user.generatedclient.model</modelPackage>
                                <apiPackage>de.consol.labs.microprofilearticle.user.generatedclient.api</apiPackage>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-prophecy-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api/prophecy.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <configOptions>
                                <sourceFolder>src/gen/java</sourceFolder>
                                <java8>true</java8>
                                <dateLibrary>java8</dateLibrary>
                                <library>jersey2</library>
                                <invokerPackage>de.consol.labs.microprofilearticle.prophecy.generatedclient</invokerPackage>
                                <modelPackage>de.consol.labs.microprofilearticle.prophecy.generatedclient.model</modelPackage>
                                <apiPackage>de.consol.labs.microprofilearticle.prophecy.generatedclient.api</apiPackage>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-postgresql-jdbc-driver</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.postgresql</groupId>
                                    <artifactId>postgresql</artifactId>
                                    <version>42.2.5</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/jdbc</outputDirectory>
                                    <destFileName>postgresql-jdbc-driver.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-zipkin-tracer</id>
                        <phase>package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/WASdev/sample.opentracing.zipkintracer/releases/download/1.2/liberty-opentracing-zipkintracer-1.2-sample.zip</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/zipkin</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
